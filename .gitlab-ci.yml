---
stages:
  - test
  - release
  - build
  - integration-test

jsonlint:
  stage: test
  image: registry.gitlab.com/pipeline-components/jsonlint:latest
  script:
    - |
      find . -not -path './.git/*' -name '*.json' -type f -print0 |
      parallel --will-cite -k -0 -n1 jsonlint -q

.go_template_defaults:
  stage: test
.semver_template_defaults:
  stage: release
variables:
  SEMVER_PREFIX: v
include:
  - remote: https://gitlab.com/bonsai-oss/organization/ci-templates/-/raw/main/templates/language/go.yml
  - remote: https://gitlab.com/bonsai-oss/organization/ci-templates/-/raw/main/templates/release/semver.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

build-initrd:
  stage: build
  image: archlinux:base
  before_script:
    - mkdir -p cache >/dev/null
    - cp -a cache/* /var/cache/pacman/pkg/ || true
    - pacman -Syy --noconfirm base-devel rsync wget go gzip cpio
    - cp -a /var/cache/pacman/pkg/* cache/ >/dev/null
  script:
    - make build
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - cache/
  artifacts:
    paths:
      - rootfs.cpio.gz

TestVM rollout:
  stage: integration-test
  needs:
    - build-initrd
  tags:
    - miniland-vm-runner
  script:
    - sudo cp -av rootfs.cpio.gz /proj/initrd/${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}.cpio.gz
    - sudo virsh destroy Miniland || true
    - sudo virsh dumpxml Miniland > /tmp/Miniland.xml
    - xmlstarlet ed -u domain/os/initrd -v /proj/initrd/${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA}.cpio.gz /tmp/Miniland.xml > /tmp/new.xml
    - sudo virsh undefine Miniland
    - sudo virsh define /tmp/new.xml
    - sudo virsh start Miniland

.testvm_defaults:
  stage: integration-test
  variables:
    TESTVM_IP: 100.64.70.93
  needs:
    - TestVM rollout
  tags:
    - miniland-vm-runner

network connectivity:
  extends: .testvm_defaults
  timeout: 10m
  script:
    - |
      until ping -c 1 "${TESTVM_IP}"; do
        sleep 1
      done

web server connectivity:
  extends: .testvm_defaults
  needs:
    - network connectivity
  timeout: 10m
  script:
    - curl -I "${TESTVM_IP}:8080/"